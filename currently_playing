#!/usr/bin/env python3

import musicpd
from datetime import datetime, timedelta
import os.path
import time
import sys

host = "localhost"
port = 6600
max_title_len = 20
max_artist_len = 15
max_len = max_title_len + max_artist_len + 3

dots = u"â€¦"
#dots = u"\u2026"
#pause = u"\uf28b"
#play = u"\uf144"
#stop = u"\uf28d"

#dots = "<span font_desc='Font Awesome 5 Free Solid'>&#x2026;</span>"
pause = "<span font_desc='Font Awesome 5 Free Solid'>&#xf28b;</span>"
play =  "<span font_desc='Font Awesome 5 Free Solid'>&#xf144;</span>"
stop = "<span font_desc='Font Awesome 5 Free Solid'>&#xf28d;</span>"



client = musicpd.MPDClient()
client.connect(host, port)

def print_status():
    client.command_list_ok_begin()
    client.status()
    client.currentsong()
    results = client.command_list_end()

    state = results[0]['state']

    if state == 'play' or state == 'pause':

        a_exists = False
        t_exists = False
        f_exists = False
        file_name = "<no data>"
        keys = results[1].keys()
        if 'artist' in keys:
            a_exists = True
            artist = results[1]['artist']
        if 'title' in keys:
            t_exists = True
            title = results[1]['title']
        if 'file' in keys:
            f_exists = True
            file_name = results[1]['file']
            if 'http' in file_name:
                file_name = "<url>"
            else:
                file_name = os.path.splitext(os.path.basename(file_name))[0]
                file_name = dots + file_name[-max_len-1:] \
                        if len(file_name) > max_len-1 else file_name

        if a_exists and not t_exists:
            song_info = artist + " - " + dots
        elif not a_exists and t_exists:
            song_info = dots + " - " + dots
        elif a_exists and t_exists:
            artist = artist[:max_artist_len-1] + dots \
                    if len(artist) > max_artist_len-1 else artist
            title = title[:max_title_len-1] + dots \
                    if len(title) > max_title_len-1 else title
            song_info = artist + " - " + title
        else:
            song_info = file_name

        info_string = play + ' ' if state == 'play' else pause + ' '
        song_info = song_info.center(max_len, ' ')
        info_string += song_info.center(max_len, ' ')

        # elapsed_time / total_time
        elapsed = int(float(results[0]['elapsed']))
        length = int(float(results[0]['duration']))
        e = datetime(1,1,1) + timedelta(seconds=elapsed)
        t = datetime(1,1,1) + timedelta(seconds=length)


        if length > 3600:
            info_string += " [%02d:%02d:%02d/%02d:%02d:%02d]" % (e.hour, e.minute,
                    e.second, t.hour, t.minute, t.second)
        else:
            info_string += " [%02d:%02d/%02d:%02d]" % (e.minute, e.second,
                    t.minute, t.second)
        print(info_string)
        sys.stdout.flush()
    else:
        print(stop + dots)
        sys.stdout.flush()

#print_status()
while True:
    try:
        print_status()
        time.sleep(0.5)
    except:
        client.close()
        client.disconnect()


client.close()
client.disconnect()
